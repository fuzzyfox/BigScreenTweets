<!DOCTYPE html>
<html lang="en">
<head>
	<title>Firefox OS Tweet Screen</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<!-- Bootstrap -->
	<link href="/stylesheets/bootstrap.css" rel="stylesheet" media="screen">
	<link href="/stylesheets/style.css" rel="stylesheet" media="screen">
	<link href="//mozorg.cdn.mozilla.net/media/css/tabzilla-min.css" rel="stylesheet" />
</head>
<body>
	<nav class="navbar container">
		<a href="https://www.mozilla.org/" id="tabzilla">mozilla</a>
		<ul class="nav navbar-nav pull-right">
			<li><a href="#">Firefox OS</a></li>
			<li><a href="#">Twitter</a></li>
		</ul>
	</nav>
	<div class="container">
		<div class="row">
			<div id="fox" class="col-lg-1">
				<img src="/images/firefox-os.png" alt="" style="width:320px;margin:60px auto 0;display:block;">
				<img src="/images/fox.png" alt="" class="hidden-sm img-responsive" id="animated-fox">
			</div>
			<div class="col-lg-1">
				<div id="phone">
					<div id="screen">
						
					</div>
				</div>
			</div>
		</div>
	</div>

	<footer>
		<div class="container">
			<div class="row">
				<a href="#">twitter</a> <a href="#">facebook</a>
			</div>
		</div>
	</footer>
	
	<div id="tweet-tmplt" style="display:none;">
		<div class="tweet">
			<h3>{user}</h3>
			<img src="{avatar}" alt="{user} profile picture">
			<p>{tweet}</p>
			<footer>
				<span class="date">{date}</span>
				<span class="actions pull-right">
					<a href="{retweet}">Retweet</a> - <a href="{follow}">Follow</a>
				</span>
			</footer>
		</div>
	</div>

	<!-- JavaScript plugins (requires jQuery) -->
	<script src="/javascripts/jquery.js"></script>
	<!-- Include all compiled plugins (below), or include individual files as needed -->
	<script src="/javascripts/bootstrap.min.js"></script>
	<!-- make working with time easier -->
	<script src="/javascripts/moment.min.js"></script>

	<!-- Include Tabzilla -->
	<script src="//mozorg.cdn.mozilla.net/tabzilla/tabzilla.js"></script>

	<script>
		// pubsub
		var o = $( {} );
		$.subscribe = o.on.bind(o);
		$.unsubscribe = o.off.bind(o);
		$.publish = o.trigger.bind(o);

		// forEach polyfill
		if ( !Array.prototype.forEach ) {
			Array.prototype.forEach = function(fn, scope) {
				for(var i = 0, len = this.length; i < len; ++i) {
					if (i in this) {
						fn.call(scope, this[i], i, this);
					}
				}
			};
		}

		var $bst = {
			// reference to the phone screen
			screen : $('#screen'),
			// most recent tweet id loaded
			max_id: undefined,
			// the index of the current tweet at the top of the screen
			tweetNum: 0,
			// reference to the rendered tweets
			statuses: $('#screen .tweet')
		}

		// get new tweets
		function fetchTweets(){
			$.getJSON('/twitter/search/tweets.json', {since_id: $bst.max_id}, function(data){
				// reverse the order of tweets (oldest -> newest)
				data.statuses.reverse();
				// loop through tweets and have them rendered to screen
				for(var i = 0, j = data.statuses.length; i < j; i++){
					$bst.screen.append(function(index, html){
						return renderTweet(index, html, data.statuses[i]);
					});
				}

				// update the shared collection of tweet jQuery(DOM) nodes
				$bst.statuses = $('#screen .tweet');
				// update the latest tweet id
				$bst.max_id = data.search_metadata.max_id;
			});
		}

		// render a tweet using the template provided
		function renderTweet(index, html, tweet){
			// get template as string
			var tmplt = document.querySelector('#tweet-tmplt').innerHTML;

			// replace the placeholders for the actual values
			return tmplt.replace('{user}', tweet.user.name, 'g')
						.replace('{tweet}', tweet.text, 'g')
						.replace('{date}', moment(tweet.created_at).format('D MMM YYYY'), 'g')
						.replace('{avatar}', tweet.user.profile_image_url, 'g');
		}

		// scroll the screen by one tweet
		function scrollTweets(){
			// actually animate the scroll
			$bst.screen.animate({"scrollTop": $bst.statuses.eq($bst.tweetNum++).prop('offsetTop')}, 1000);
			
			// if we're out of new tweets just prevent out of bounds exceptions and use the 
			// same tweet till we get more.
			if($bst.tweetNum >= $bst.statuses.length){
				$bst.tweetNum--;
			}
		}

		// scroll tweets every once in a while
		scrollTimer = setInterval(scrollTweets, 5000);
		$bst.screen.hover(function(){
			clearInterval(scrollTimer);
		}, function(){
			scrollTweets();
			scrollTimer = setInterval(scrollTweets, 5000);
		});
		// fetch tweets periodically
		fetchTimer = setInterval(fetchTweets, 10000);
	</script>
</body>
</html>